global:
  domain: <domain_name> ## Add your Domain Name "Eg: site.mydomain.com" Do not use the dummy domain
root-ingress:
  cert-issuer: "letsencrypt-prod"
configmaps:
  egov-config:
    data:
      db-host: <db_host_name> ## Add db-host name eg: egov-demo.database.azure.co
      db-name: <db_name> ## Add db-name
      db-url: "jdbc:postgresql://<db_host_name>/<db_name>" ## example: jdbc:postgresql://egov-demo.postgres.database.azure.com:5432/egov_demo
      db-otel-url: "jdbc:otel:postgresql://<db_host_name>/<db_name>"
      es-host: "elasticsearch-data.backbone"
      es-indexer-host: "https://elasticsearch-data.backbone:9200/"
      kafka-brokers: "kafka-kraft-controller-headless.backbone:9092"
      egov-services-fqdn-name: https://<domain_name>/ ## Add your Domain Name
      state-level-tenantid-length: "1"
      state-schema-index-position-tenantid: "0"
      is-environment-central-instance: false
      egov-state-level-tenant-id: <tenant_id> ###### Replace with your own tenant ID if you are not using the default tenant ID (pg)
      state-level-tenant-id: <tenant_id> ###### Replace with your own tenant ID if you are not using the default tenant ID (pg)
      host-map: "{'<tenant_id>':'https://<domain_name>/'}" # update state tenant-id & domain
      
  egov-service-host:
      data:
        internal-gateway-scg: "http://internal-gateway-scg.egov:8080/"
        dashboard-analytics: "http://dashboard-analytics.egov:8080/"
        dashboard-ingest: "http://dashboard-ingest.egov:8080/"
        egov-enc-service: "http://egov-enc-service.egov:8080/"
        egov-accesscontrol: "http://egov-accesscontrol.egov:8080/"
        egov-user: "http://egov-user.egov:8080/"
        egov-location: "http://egov-location.egov:8080/"
        egov-filestore: "http://egov-filestore.egov:8080/"
        egov-localization: "http://egov-localization.egov:8080/"
        egov-idgen: "http://egov-idgen.egov:8080/"
        egov-otp: "http://egov-otp.egov:8080/"
        egov-mdms-service: "http://mdms-v2.egov:8080/"
        egov-workflow-v2: "http://egov-workflow-v2.egov:8080/"
        egov-searcher: "http://egov-searcher.egov:8080/"
        egov-indexer: "http://egov-indexer.egov:8080/"
        egov-hrms: "http://egov-hrms.egov:8080/"
        es-client: "http://elasticsearch-data-v1.es-cluster:9200"
        location: "http://location.egov:8080/"
        pdf-service: "http://pdf-service.egov:8080/"
        user-otp: "http://user-otp.egov:8080/"
        minio-url: "http://minio-svc.backbone:9000/"
        egov-url-shortening: "http://egov-url-shortening.egov:8080/"
        inbox: "http://inbox.egov:8080/"
        mdms-service-v2: "http://mdms-v2.egov:8080/"
        egov-user-event: "http://egov-user-event.staging:8080"
        boundary-service: "http://boundary-service.egov:8080/"
        egov-user-egov: "http://egov-user.egov:8080/"

egov-localization:
  replicas: 1
  memory_limits: 756Mi
  
egov-url-shortening:
  egov-url-shortner-endpoint: "/egov-url-shortening/shortener"
  hashids-salt: "randomsalt"
  hashids-min-length: "5"

# core >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

egov-filestore:
  memory_limits: 728Mi
  volume: /opt/eGov/filestore
  is-bucket-fixed: "true"
  is-s3-enabled: "true"
  minio-enabled: false
  fixed-bucketname: <filestore_s3_bucket> ## Update your bucket name
  allowed-file-formats-map: "{jpg:{'image/jpg','image/jpeg'},jpeg:{'image/jpeg','image/jpg'},png:{'image/png'},pdf:{'application/pdf'},odt:{'application/vnd.oasis.opendocument.text'},ods:{'application/vnd.oasis.opendocument.spreadsheet'},docx:{'application/x-tika-msoffice','application/x-tika-ooxml','application/vnd.oasis.opendocument.text','application/msword'},doc:{'application/x-tika-msoffice','application/x-tika-ooxml','application/vnd.oasis.opendocument.text','application/msword'},dxf:{'text/plain','application/dxf','application/octet-stream','image/vnd.dxf','image/vnd.dxf; format=ascii','image/vnd.dxf; format=binary','image/vnd.dxb'},csv:{'text/plain'},txt:{'text/plain'},xlsx:{'application/x-tika-ooxml','application/x-tika-msoffice','application/vnd.ms-excel','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','application/zip'},xls:{'application/x-tika-ooxml','application/x-tika-msoffice','application/vnd.ms-excel','multipart/form-data'},zip:{'application/zip','application/octet-stream'},geojson:{'application/json','text/plain','application/geo+json','multipart/form-data'},json:{'application/json','text/plain'}}"
  allowed-file-formats: "jpg,jpeg,png,doc,docx,pdf,odt,ods,text,dxf,xls,xlsx,json"


egov-notification-sms:
  sms-provider-url: "sms provider url" ## Add sms provider url
  sms.provider.class: "Console"
  sms.provider.contentType:  "application/x-www-form-urlencoded"
  sms-config-map: "{'User':'$username', 'passwd': '$password', 'sid':'$senderid', 'mobilenumber':'$mobileno', 'message':'$message', 'mtype':'N', 'DR':'N', 'smsservicetype':'singlemsg'}"
  sms-gateway-to-use: "sms provider name" ## Add sms provider name
  sms-sender: "sms sender" ## Add sms sender
  sms-sender-requesttype: "GET"
  sms-custom-config: "true"
  sms-extra-req-params: "mtype=N&DR=Y"
  sms-sender-req-param-name: "sid"
  sms-sender-username-req-param-name: "User"
  sms-sender-password-req-param-name: "passwd"
  sms-destination-mobile-req-param-name: "mobilenumber"
  sms-message-req-param-name: "message"
  sms-error-codes: "401,403,404,405,406,407,408,409,410,411,412,413,414"

egov-user:
  replicas: 1
  heap: "-Xmx256m -Xms256m"
  memory_limits: 512Mi
  otp-validation: "true"
  citizen-otp-enabled: "true"
  employee-otp-enabled: "false"
  access-token-validity: 10080
  refresh-token-validity: 20160
  default-password-expiry: 90
  mobile-number-validation: "false"
  roles-state-level: "true"
  citizen-registration-withlogin: "true"
  citizen-otp-fixed: "123456"
  citizen-otp-fixed-enabled: "true"
  egov-state-level-tenant-id: <tenant_id>


egov-idgen:
  replicas: 1
  idformat-from-mdms: "true"
  java-args: -Dspring.profiles.active=monitoring
  heap: "-Xmx192m -Xms192m"
  memory_limits: 386Mi
  autocreate-new-seq: "true"
  
egov-user-event:
  memory_limits: 386Mi


egov-indexer:
  replicas: 1
  heap: "-Xmx512m -Xms512m"
  memory_limits: "768Mi"
  initContainers:
    gitSync:
      repo: "git@github.com:egovernments/Citizen-Complaint-Resolution-System" ##### Change repo url with Your fork Repo url
      branch: "develop" ##### Change repo branch with Your fork Repo branch
  egov-indexer-yaml-repo-path: "file:///work-dir/Citizen-Complaint-Resolution-System/configs/egov-indexer/pgr-services.yml,file:///work-dir/Citizen-Complaint-Resolution-System/configs/egov-indexer/pgr-migration-batch-indexer.yml,file:///work-dir/Citizen-Complaint-Resolution-System/configs/egov-indexer/egov-url-shortening-indexer.yaml,file:///work-dir/Citizen-Complaint-Resolution-System/configs/egov-indexer/pgr-inbox-indexer.yml"
  dss-collectionindex-topic: dss-collection-update

egov-persister:
  replicas: 1
  images:
    - egovio/egov-persister
  persist-yml-path: "file:///work-dir/Citizen-Complaint-Resolution-System/configs/egov-persister/audit-service-persister.yml,file:///work-dir/Citizen-Complaint-Resolution-System/configs/egov-persister/egov-user-event-persister.yml,file:///work-dir/Citizen-Complaint-Resolution-System/configs/egov-persister/egov-workflow-v2-persister.yml,file:///work-dir/Citizen-Complaint-Resolution-System/configs/egov-persister/hrms-employee-persister.yml,file:///work-dir/Citizen-Complaint-Resolution-System/configs/egov-persister/pgr-migration-batch.yml,file:///work-dir/Citizen-Complaint-Resolution-System/configs/egov-persister/pgr-services-persister.yml,file:///work-dir/Citizen-Complaint-Resolution-System/configs/egov-persister/mdms-persister.yml,file:///work-dir/Citizen-Complaint-Resolution-System/configs/egov-persister/boundary-persister.yml"
  initContainers:
    gitSync:
      repo: "git@github.com:egovernments/Citizen-Complaint-Resolution-System" ##### Change repo url with Your fork Repo url
      branch: "develop" ##### Change repo branch with Your fork Repo branch


### When configuring the application with your own tenant ID (instead of the default tenant ID pg), follow these steps:
### Download the contents from this file: https://s3.ap-south-1.amazonaws.com/egov-uat-assets/globalConfigs.js
### Modify the tenant ID as per your setup.
### Upload the updated file to your own S3 bucket or Blob storage.
### Update the application to use the new URL pointing to your uploaded configuration file.
digit-ui:
  custom-js-injection: |
    sub_filter.conf: "
      sub_filter  '<head>' '<head>
      <script src=https://<assets_s3_bucket>.s3.ap-south-1.amazonaws.com/globalConfigsPGR.js type=text/javascript></script>
      ';"

ingress-nginx:
  default-backend-service: "egov/nginx"
  namespace: egov
  cert-issuer: "letsencrypt-prod"
  ssl-protocols: "TLSv1.2 TLSv1.3"
  ssl-ciphers: "EECDH+CHACHA20:EECDH+AES"
  ssl-ecdh-curve: "X25519:prime256v1:secp521r1:secp384r1"
  controller:
    replicas: 1
    metrics:
      enabled: false
      serviceMonitor:
        enabled: true
      prometheusRule:
        enabled: true
    addHeaders:
      X-Content-Type-Options: "nosniff"
      X-Frame-Options: "SAMEORIGIN"
      X-XSS-Protection: "1; mode=block"
      Access-Control-Allow-Origin: "https://urban-lts.digit.org"
      Access-Control-Allow-Methods: "GET, POST, OPTIONS"
      Access-Control-Allow-Headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range"
    setSslTls: "urban-lts.digit.org-tls-certs"
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

  
inbox:
  service-map : '{"FSM":{"searchPath":"http://fsm.egov:8080/fsm/v1/_search","dataRoot":"fsm","applNosParam":"applicationNos","businessIdProperty":"applicationNo"},"FSM_POST_PAY_SERVICE":{"searchPath":"http://fsm.egov:8080/fsm/v1/_search","dataRoot":"fsm","applNosParam":"applicationNos","businessIdProperty":"applicationNo","applsStatusParam":"applicationStatus"},"FSM_VEHICLE_TRIP":{"searchPath":"http://vehicle.egov:8080/vehicle/trip/v1/_search","dataRoot":"vehicleTrip","applNosParam":"applicationNos","businessIdProperty":"applicationNo"},"PT.CREATE,PT.UPDATE,PT.MUTATION":{"searchPath":"http://property-services.egov:8080/property-services/property/_search","dataRoot":"Properties","applNosParam":"acknowldgementNumber","businessIdProperty":"acknowldgementNumber","applsStatusParam":"status"},"NewTL,DIRECTRENEWAL,EDITRENEWAL":{"searchPath":"http://tl-services.egov:8080/tl-services/v1/_search","dataRoot":"Licenses","applNosParam":"applicationNumber","businessIdProperty":"applicationNumber","applsStatusParam":"status"},"BPA_LOW,BPA,BPA_OC,BPA_HIGH":{"searchPath":"http://bpa-services.egov:8080/bpa-services/v1/bpa/_search","dataRoot":"BPA","applNosParam":"applicationNo","businessIdProperty":"applicationNo","applsStatusParam":"status"},"ARCHITECT,ENGINEER,STRUCTURALENGINEER,BUILDER,SUPERVISOR,TOWNPLANNER":{"searchPath":"http://tl-services.egov:8080/tl-services/v1/BPAREG/_search","dataRoot":"Licenses","applNosParam":"applicationNumber","businessIdProperty":"applicationNumber","applsStatusParam":"status"},"FIRE_NOC_SRV,FIRE_NOC_OFFLINE,AIRPORT_NOC_OFFLINE,AIRPORT_NOC_SRV":{"searchPath":"http://noc-services.egov:8080/noc-services/v1/noc/_search","dataRoot":"Noc","applNosParam":"applicationNo","businessIdProperty":"applicationNo","applsStatusParam":"status"},"NewWS1,ModifyWSConnection,DisconnectWSConnection":{"searchPath":"http://ws-services.egov:8080/ws-services/wc/_search","dataRoot":"WaterConnection","applNosParam":"applicationNumber","businessIdProperty":"applicationNo","applsStatusParam":"applicationStatus"},"NewSW1,ModifySWConnection,DisconnectSWConnection":{"searchPath":"http://sw-services.egov:8080/sw-services/swc/_search","dataRoot":"SewerageConnections","applNosParam":"applicationNumber","businessIdProperty":"applicationNo","applsStatusParam":"applicationStatus"},"WS.AMENDMENT,SW.AMENDMENT":{"searchPath":"http://billing-service.egov:8080/billing-service/amendment/_search","dataRoot":"Amendments","applNosParam":"consumerCode","businessIdProperty":"amendmentId","applsStatusParam":"status"}}'
  bs-service-map : '{"WS":{"searchPath":"http://ws-services.egov:8080/ws-services/wc/_search","dataRoot":"WaterConnection","consumerCodeParam":"connectionNumber"},"SW":{"searchPath":"http://sw-services.egov:8080/sw-services/swc/_search","dataRoot":"SewerageConnections","consumerCodeParam":"connectionNumber"}}'
  

# gateway >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
gateway:
  replicas: 1
  custom-filter-property: "false"
  tracing-enabled: "true"
  heap: "-Xmx704m -Xms512m"
  memory_limits: 786Mi
  server-tomcat-max-threads: "350"
  server-tomcat-max-connections: "1500"
  #egov-statelevel-tenant-map: "{'kenya-demo.digit.org':'ke','unified-demo.digit.org':'pg','central-instance.digit.org':'in'}"
  egov-encrypted-endpoints-list: "/user/oauth/token,/employee/user/login,/filestore/v1/files"
  egov-open-endpoints-whitelist: "/user/oauth/token,/user-otp/v1/_send,/otp/v1/_validate,/user/citizen/_create,/localization/messages,/localization/messages/v1/_search,/user/password/nologin/_update,/pgr/servicedefinition/v1/_search,/pgr/servicecategories/v1/_search,/pgr/v1/otp/_send,/pgr-master/receivingmode/v1/_search,/tenant/v1/tenant/_search,/egov-location/boundarys,/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName,/pgr-master/service/v1/_search,/egov-location/boundarys/getLocationByLocationName,/pgr-master/OTPConfig/_search,/pgr-master/serviceGroup/v1/_search,/egov-location/boundarys/isshapefileexist,/pgr/services/v1/_search,/hr-masters/hrconfigurations/_search,/collection-services/receipts/_view,/pgr-master/service/v2/_search,/pgr-master/servicedefinition/v1/_search,/citizen-services,/citizen-services/v1/requests/receipt/_create,/citizen-services/v1/pgresponse,/citizen-services/v1/requests/anonymous/_search,/egov-mdms-service/v1/_search,/egov-mdms-service/v1/_get,/egov-mdms-service/v1/_reload,/egov-mdms-service/v1/_reloadobj,/egov-location/boundarys/getshapefile,/egov-indexer/index-operations/_index,/egov-indexer/index-operations/_reload,/egov-mdms-service-test/v1/_search,/egov-mdms-create/v1/_update,/egov-mdms-create/v1/_create,/egov-mdms-service-test/v1/_reload,/filestore/v1/files/url,/egov-url-shortening,/whatsapp-webhook/messages,/edcr/rest/dcr/downloadfile,/mdms-v2/schema/v1/_search,/mdms-v2/v2/_search,/mdms-v2/v1/_search,/dashboard-analytics/dashboard/getChartV2,/dashboard-analytics/dashboard/getDashboardConfig/overview,/filestore/v1/files"
  egov-mixed-mode-endpoints-whitelist: "/pgr/seva/v1/_create,/pgr/seva/v1/_search,/pgr/seva/v1/_count,/workflow/history/v1/_search,/filestore/v1/files/id,/filestore/v1/files,/filestore/v1/files/tag,/egov-common-masters/departments/_search,/pt-property/property/propertytypes/_search,/pt-property/properties/_search,/pt-property/property/usages/_search,/egov-idgen/id/_generate,/egf-masters/financialyears/_search,/egov-common-workflows/process/_start,/egov-common-workflows/process/_search,/egov-common-workflows/tasks,/egov-common-workflows/tasks/{id}/_update,/user/_search,/billing-service/demand/_dues,/billing-service/bill/_generate,/billing-service/demand/_create,/wcms/masters/waterchargesconfig/_search,/wcms/masters/usagetypes/_search,/wcms/masters/pipesizes/_search,/wcms-connection/connection/_getbillingtypes,/wcms-connection/connection/_getconnectiontypes,/wcms/masters/sourcetypes/_search,/wcms/masters/supplytypes/_search,/wcms/masters/storagereservoirs/_search,/wcms/masters/treatmentplants/_search,/wcms/masters/documenttypes-applicationtypes/_search,/wcms/masters/donations/_search,/wcms/masters/nonmeterwaterrates/_search,/wcms-connection/connection/_create,/egov-common-masters/genders/_search,/egov-common-workflows/designations/_search,/access/v1/actions/mdms/_get,/tl-services/v1/BPAREG/_create,/tl-services/v1/BPAREG/_update,/tl-calculator/v1/BPAREG/_getbill,/property-services/property/_search,/billing-service/bill/v2/_search,/egov-location/location/v11/boundarys/_search,/pg-service/transaction/v1/_create,/collection-services/payments/_search,/pdf-service/v1/_create,/billing-service/bill/v2/_fetchbill,/pg-service/transaction/v1/_update,/ws-services/wc/_search,/sw-services/swc/_search,/edcr/rest/dcr/scrutinydetails,/edcr/rest/dcr/occomparison"
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

  
pgr-services:
  notification-sms-enabled: "true"
  notification-email-enabled: "false"
  new-complaint-enabled: "true"
  reassign-complaint-enabled: "true"
  reopen-complaint-enabled: "true"
  comment-by-employee-notif-enabled: "false"
  notification-allowed-status: "open,assigned,rejected,resolved"
  java-enable-debug: "true"
  time-before-closing-complaint: "3600000"
  memory_limits: 386Mi

egov-workflow-v2:
  replicas: 1
  logging-level: "DEBUG"
  java-args: -Dspring.profiles.active=monitoring
  heap: "-Xmx192m -Xms192m"
  workflow-statelevel: "true"
  wf-max-limit: "10000"
  memory_limits: 386Mi

egov-hrms:
  java-args: -Dspring.profiles.active=monitoring
  heap: "-Xmx192m -Xms192m"
  memory_limits: 386Mi


boundary-service:
  replicas: 1
  heap: '-Xmx512m -Xms512m'
  memory_limits: 512Mi
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

pgadmin:
  replicas: 1
  dbUrl: "pgr-demo-db.czvokiourya9.ap-south-1.rds.amazonaws.com" ### replace DB URL
  dbReadUrl: "pgr-demo-db.czvokiourya9.ap-south-1.rds.amazonaws.com" ### replace DB URL
  environment: "pgr-demo"
  maintenance-db-name: "pgr_demo_db"
  db-admin-username: "pgrdemo"
  db-read-username: "pgrdemo"
  cookie-protection: "False"
  max-query-history: "50"
  max-login-attempts: "5"
  enable-save-password: "False"
  persistence:
    enabled: true
    dataDirSize: "5Gi"
    storageClassName: gp3
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

kafka-ui:
  yamlApplicationConfig:
    kafka:
      clusters:
        - name: kafka-kraft
          bootstrapServers: kafka-kraft-controller-headless.backbone:9092
          readonly: true

egov-enc-service:
  java-args: -Dspring.profiles.active=monitoring
  state-level-tenant-id: <tenant_id> ###### Replace with your own tenant ID if you are not using the default tenant ID (pg)
  egov-state-level-tenant-id: <tenant_id> ###### Replace with your own tenant ID if you are not using the default tenant ID (pg)
  # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

oauth2-proxy:
  namespace: egov
  config:
    configFile: |-
      email_domains = [ "*" ]
      github_org = <github_org_name> #####Change to your git org name
      github_team = <github_team> #### Change to your github teams
      upstreams = [ "file:///dev/null" ]


### Grafana >>>>>>>>>>>>>>>>>>>>
grafana:
  github:
    allowed_organizations: ["egovernments"]
    role_attribute_path: contains(groups[*], '@egovernments/micro-service-dev') && 'Viewer'
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

### Prometheus & Alertmanager >>>>>>>>>>>>>>>>>>>>
prometheus:
  retention: 7d
  storageSpec:
    volumeClaimTemplate:
      spec:
        storageClassName: gp3
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 15Gi
  alertmanager:
    enabled: true
  externalLabels:
    cluster: urban
  additionalScrapeConfigs:
    - job_name: 'nginx-ingress-metrics'
      static_configs:
        - targets: [ 'release-name-ingress-nginx-controller-metrics.egov:10254' ]
    - job_name: 'redis-exporter'
      static_configs:
        - targets: [ 'prometheus-redis-exporter.backbone:9121' ]
    - job_name: 'blackbox'
      metrics_path: /probe
      params:
        module: [ http_2xx ]
      static_configs:
        - targets:
            - https://unified-uat.digit.org/citizen/
      relabel_configs:
        - source_labels: [ __address__ ]
          target_label: __param_target
        - source_labels: [ __param_target ]
          target_label: instance
        - target_label: __address__
          replacement: prometheus-blackbox-exporter:9115
    - job_name: 'blackbox_exporter'
      static_configs:
        - targets: [ 'prometheus-blackbox-exporter:9115' ]
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

### loki-stack >>>>>>>>>>>>>>>>>>>>
loki:
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 15Gi
  serviceAccount:
    annotations: {}
  additionalConfigs:
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    storage_config:
      boltdb_shipper:
        active_index_directory: /data/loki/index
        cache_location: /data/loki/index_cache
        shared_store: filesystem
        cache_ttl: 24h
      filesystem:
        directory: /data/loki/chunks
    compactor:
      working_directory: /data/loki/boltdb-shipper-compactor
      shared_store: filesystem
      retention_enabled: true
      compaction_interval: 72h
    table_manager:
      retention_deletes_enabled: true
      retention_period: 72h  # 3 days
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

### minio >>>>>>>>>>>>>>>>>>>>
minio:
  persistence:
    storageClass: <storage_class>
    accessMode: ReadWriteOnce
    size: 20Gi
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
